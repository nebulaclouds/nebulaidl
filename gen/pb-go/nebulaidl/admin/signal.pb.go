// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nebulaidl/admin/signal.proto

package admin

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	core "github.com/nebulaclouds/nebulaidl/gen/pb-go/nebulaidl/core"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// SignalGetOrCreateRequest represents a request structure to retrive or create a signal.
// See :ref:`ref_nebulaidl.admin.Signal` for more details
type SignalGetOrCreateRequest struct {
	// A unique identifier for the requested signal.
	Id *core.SignalIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A type denoting the required value type for this signal.
	Type                 *core.LiteralType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SignalGetOrCreateRequest) Reset()         { *m = SignalGetOrCreateRequest{} }
func (m *SignalGetOrCreateRequest) String() string { return proto.CompactTextString(m) }
func (*SignalGetOrCreateRequest) ProtoMessage()    {}
func (*SignalGetOrCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140243fdd3718c2, []int{0}
}

func (m *SignalGetOrCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalGetOrCreateRequest.Unmarshal(m, b)
}
func (m *SignalGetOrCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalGetOrCreateRequest.Marshal(b, m, deterministic)
}
func (m *SignalGetOrCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalGetOrCreateRequest.Merge(m, src)
}
func (m *SignalGetOrCreateRequest) XXX_Size() int {
	return xxx_messageInfo_SignalGetOrCreateRequest.Size(m)
}
func (m *SignalGetOrCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalGetOrCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignalGetOrCreateRequest proto.InternalMessageInfo

func (m *SignalGetOrCreateRequest) GetId() *core.SignalIdentifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SignalGetOrCreateRequest) GetType() *core.LiteralType {
	if m != nil {
		return m.Type
	}
	return nil
}

// SignalListRequest represents a request structure to retrieve a collection of signals.
// See :ref:`ref_nebulaidl.admin.Signal` for more details
type SignalListRequest struct {
	// Indicates the workflow execution to filter by.
	// +required
	WorkflowExecutionId *core.WorkflowExecutionIdentifier `protobuf:"bytes,1,opt,name=workflow_execution_id,json=workflowExecutionId,proto3" json:"workflow_execution_id,omitempty"`
	// Indicates the number of resources to be returned.
	// +required
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// In the case of multiple pages of results, the, server-provided token can be used to fetch the next page
	// in a query.
	// +optional
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// Indicates a list of filters passed as string.
	// +optional
	Filters string `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	// Sort ordering.
	// +optional
	SortBy               *Sort    `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignalListRequest) Reset()         { *m = SignalListRequest{} }
func (m *SignalListRequest) String() string { return proto.CompactTextString(m) }
func (*SignalListRequest) ProtoMessage()    {}
func (*SignalListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140243fdd3718c2, []int{1}
}

func (m *SignalListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalListRequest.Unmarshal(m, b)
}
func (m *SignalListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalListRequest.Marshal(b, m, deterministic)
}
func (m *SignalListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalListRequest.Merge(m, src)
}
func (m *SignalListRequest) XXX_Size() int {
	return xxx_messageInfo_SignalListRequest.Size(m)
}
func (m *SignalListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignalListRequest proto.InternalMessageInfo

func (m *SignalListRequest) GetWorkflowExecutionId() *core.WorkflowExecutionIdentifier {
	if m != nil {
		return m.WorkflowExecutionId
	}
	return nil
}

func (m *SignalListRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SignalListRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalListRequest) GetFilters() string {
	if m != nil {
		return m.Filters
	}
	return ""
}

func (m *SignalListRequest) GetSortBy() *Sort {
	if m != nil {
		return m.SortBy
	}
	return nil
}

// SignalList represents collection of signals along with the token of the last result.
// See :ref:`ref_nebulaidl.admin.Signal` for more details
type SignalList struct {
	// A list of signals matching the input filters.
	Signals []*Signal `protobuf:"bytes,1,rep,name=signals,proto3" json:"signals,omitempty"`
	// In the case of multiple pages of results, the server-provided token can be used to fetch the next page
	// in a query. If there are no more results, this value will be empty.
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignalList) Reset()         { *m = SignalList{} }
func (m *SignalList) String() string { return proto.CompactTextString(m) }
func (*SignalList) ProtoMessage()    {}
func (*SignalList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140243fdd3718c2, []int{2}
}

func (m *SignalList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalList.Unmarshal(m, b)
}
func (m *SignalList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalList.Marshal(b, m, deterministic)
}
func (m *SignalList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalList.Merge(m, src)
}
func (m *SignalList) XXX_Size() int {
	return xxx_messageInfo_SignalList.Size(m)
}
func (m *SignalList) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalList.DiscardUnknown(m)
}

var xxx_messageInfo_SignalList proto.InternalMessageInfo

func (m *SignalList) GetSignals() []*Signal {
	if m != nil {
		return m.Signals
	}
	return nil
}

func (m *SignalList) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// SignalSetRequest represents a request structure to set the value on a signal. Setting a signal
// effetively satisfies the signal condition within a Nebula workflow.
// See :ref:`ref_nebulaidl.admin.Signal` for more details
type SignalSetRequest struct {
	// A unique identifier for the requested signal.
	Id *core.SignalIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The value of this signal, must match the defining signal type.
	Value                *core.Literal `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SignalSetRequest) Reset()         { *m = SignalSetRequest{} }
func (m *SignalSetRequest) String() string { return proto.CompactTextString(m) }
func (*SignalSetRequest) ProtoMessage()    {}
func (*SignalSetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140243fdd3718c2, []int{3}
}

func (m *SignalSetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalSetRequest.Unmarshal(m, b)
}
func (m *SignalSetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalSetRequest.Marshal(b, m, deterministic)
}
func (m *SignalSetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalSetRequest.Merge(m, src)
}
func (m *SignalSetRequest) XXX_Size() int {
	return xxx_messageInfo_SignalSetRequest.Size(m)
}
func (m *SignalSetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalSetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignalSetRequest proto.InternalMessageInfo

func (m *SignalSetRequest) GetId() *core.SignalIdentifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SignalSetRequest) GetValue() *core.Literal {
	if m != nil {
		return m.Value
	}
	return nil
}

// SignalSetResponse represents a response structure if signal setting succeeds.
type SignalSetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignalSetResponse) Reset()         { *m = SignalSetResponse{} }
func (m *SignalSetResponse) String() string { return proto.CompactTextString(m) }
func (*SignalSetResponse) ProtoMessage()    {}
func (*SignalSetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140243fdd3718c2, []int{4}
}

func (m *SignalSetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalSetResponse.Unmarshal(m, b)
}
func (m *SignalSetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalSetResponse.Marshal(b, m, deterministic)
}
func (m *SignalSetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalSetResponse.Merge(m, src)
}
func (m *SignalSetResponse) XXX_Size() int {
	return xxx_messageInfo_SignalSetResponse.Size(m)
}
func (m *SignalSetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalSetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignalSetResponse proto.InternalMessageInfo

// Signal encapsulates a unique identifier, associated metadata, and a value for a single Nebula
// signal. Signals may exist either without a set value (representing a signal request) or with a
// populated value (indicating the signal has been given).
type Signal struct {
	// A unique identifier for the requested signal.
	Id *core.SignalIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// A type denoting the required value type for this signal.
	Type *core.LiteralType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// The value of the signal. This is only available if the signal has been "set" and must match
	// the defined the type.
	Value                *core.Literal `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Signal) Reset()         { *m = Signal{} }
func (m *Signal) String() string { return proto.CompactTextString(m) }
func (*Signal) ProtoMessage()    {}
func (*Signal) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140243fdd3718c2, []int{5}
}

func (m *Signal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signal.Unmarshal(m, b)
}
func (m *Signal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signal.Marshal(b, m, deterministic)
}
func (m *Signal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signal.Merge(m, src)
}
func (m *Signal) XXX_Size() int {
	return xxx_messageInfo_Signal.Size(m)
}
func (m *Signal) XXX_DiscardUnknown() {
	xxx_messageInfo_Signal.DiscardUnknown(m)
}

var xxx_messageInfo_Signal proto.InternalMessageInfo

func (m *Signal) GetId() *core.SignalIdentifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Signal) GetType() *core.LiteralType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Signal) GetValue() *core.Literal {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*SignalGetOrCreateRequest)(nil), "nebulaidl.admin.SignalGetOrCreateRequest")
	proto.RegisterType((*SignalListRequest)(nil), "nebulaidl.admin.SignalListRequest")
	proto.RegisterType((*SignalList)(nil), "nebulaidl.admin.SignalList")
	proto.RegisterType((*SignalSetRequest)(nil), "nebulaidl.admin.SignalSetRequest")
	proto.RegisterType((*SignalSetResponse)(nil), "nebulaidl.admin.SignalSetResponse")
	proto.RegisterType((*Signal)(nil), "nebulaidl.admin.Signal")
}

func init() { proto.RegisterFile("nebulaidl/admin/signal.proto", fileDescriptor_c140243fdd3718c2) }

var fileDescriptor_c140243fdd3718c2 = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x93, 0xdf, 0x8a, 0x13, 0x31,
	0x14, 0x87, 0x99, 0x76, 0xdb, 0x62, 0x16, 0x51, 0x67, 0x5d, 0x36, 0x54, 0xc5, 0x32, 0x57, 0x05,
	0xd9, 0x44, 0xd7, 0x4b, 0xf1, 0x66, 0x45, 0x44, 0x58, 0x10, 0x52, 0x45, 0xf0, 0xa6, 0xcc, 0x9f,
	0xd3, 0x1a, 0x36, 0x93, 0x8c, 0xc9, 0x19, 0x6b, 0x2f, 0x7c, 0x11, 0x1f, 0xd1, 0xa7, 0x90, 0x26,
	0x33, 0x9d, 0x65, 0x8a, 0x20, 0x5e, 0xec, 0x65, 0xf2, 0xfb, 0xce, 0x99, 0x6f, 0x38, 0x39, 0xe4,
	0xb1, 0x86, 0xac, 0x56, 0xa9, 0x2c, 0x14, 0x4f, 0x8b, 0x52, 0x6a, 0xee, 0xe4, 0x5a, 0xa7, 0x8a,
	0x55, 0xd6, 0xa0, 0x89, 0xef, 0xed, 0x53, 0xe6, 0xd3, 0xe9, 0x01, 0x9e, 0x9b, 0xb2, 0x34, 0x3a,
	0xe0, 0xd3, 0xa7, 0x5d, 0x9a, 0x1b, 0x0b, 0x5c, 0x16, 0xa0, 0x51, 0xae, 0x24, 0xd8, 0x06, 0x78,
	0xd2, 0x03, 0x94, 0x44, 0xb0, 0xa9, 0x72, 0x4d, 0x3c, 0xed, 0xc5, 0xb8, 0xad, 0xa0, 0xc9, 0x92,
	0x9f, 0x84, 0x2e, 0xbc, 0xda, 0x3b, 0xc0, 0x0f, 0xf6, 0x8d, 0x85, 0x14, 0x41, 0xc0, 0xb7, 0x1a,
	0x1c, 0xc6, 0xcf, 0xc9, 0x40, 0x16, 0x34, 0x9a, 0x45, 0xf3, 0xe3, 0x8b, 0x19, 0xeb, 0x9c, 0x77,
	0x4d, 0x58, 0xa8, 0x7a, 0xbf, 0x57, 0x11, 0x03, 0x59, 0xc4, 0x9c, 0x1c, 0xed, 0x9a, 0xd3, 0x81,
	0xaf, 0x79, 0xd4, 0xaf, 0xb9, 0x0a, 0x5e, 0x1f, 0xb7, 0x15, 0x08, 0x0f, 0x26, 0xbf, 0x23, 0xf2,
	0x20, 0x74, 0xba, 0x92, 0x0e, 0xdb, 0x0f, 0x2f, 0xc9, 0xe9, 0xc6, 0xd8, 0xeb, 0x95, 0x32, 0x9b,
	0x25, 0xfc, 0x80, 0xbc, 0x46, 0x69, 0xf4, 0x72, 0xef, 0xf2, 0xac, 0xdf, 0xf7, 0x73, 0x03, 0xbf,
	0x6d, 0xd9, 0x1b, 0x5a, 0x27, 0x9b, 0xc3, 0x30, 0x7e, 0x48, 0x46, 0x4a, 0x96, 0x12, 0xbd, 0xe8,
	0x5d, 0x11, 0x0e, 0xbb, 0x5b, 0x34, 0xd7, 0xa0, 0xe9, 0x70, 0x16, 0xcd, 0xef, 0x88, 0x70, 0x88,
	0x29, 0x99, 0xac, 0xa4, 0x42, 0xb0, 0x8e, 0x1e, 0xf9, 0xfb, 0xf6, 0x18, 0x33, 0x32, 0x71, 0xc6,
	0xe2, 0x32, 0xdb, 0xd2, 0x91, 0x17, 0x3b, 0x65, 0xbd, 0xc1, 0xb2, 0x85, 0xb1, 0x28, 0xc6, 0x3b,
	0xea, 0x72, 0x9b, 0x7c, 0x22, 0xa4, 0xfb, 0xd7, 0xf8, 0x05, 0x99, 0x84, 0x47, 0xe1, 0x68, 0x34,
	0x1b, 0xce, 0x8f, 0x2f, 0xce, 0x0e, 0xab, 0x7d, 0x2e, 0x5a, 0xae, 0x13, 0x1c, 0xdc, 0x10, 0x4c,
	0x1c, 0xb9, 0x1f, 0xc0, 0x05, 0xe0, 0xff, 0x8f, 0xee, 0x9c, 0x8c, 0xbe, 0xa7, 0xaa, 0x6e, 0x67,
	0x77, 0xf6, 0x97, 0xd9, 0x89, 0x40, 0x25, 0x27, 0xed, 0xdc, 0xfc, 0x47, 0x5d, 0x65, 0xb4, 0x83,
	0xe4, 0x57, 0x44, 0xc6, 0xe1, 0xf6, 0x16, 0xde, 0x4e, 0x67, 0x3c, 0xfc, 0x17, 0xe3, 0xcb, 0xd7,
	0x5f, 0x5e, 0xad, 0x25, 0x7e, 0xad, 0x33, 0x96, 0x9b, 0x92, 0x07, 0x36, 0x57, 0xa6, 0x2e, 0x1c,
	0xef, 0xf6, 0x63, 0x0d, 0x9a, 0x57, 0xd9, 0xf9, 0xda, 0xf0, 0xde, 0x46, 0x66, 0x63, 0xbf, 0x2f,
	0x2f, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x6e, 0x79, 0x8b, 0xda, 0x03, 0x00, 0x00,
}
